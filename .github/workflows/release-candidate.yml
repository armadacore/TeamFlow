name: Release candidate

on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  vulnerability-check:
    runs-on: ubuntu-latest
    steps:
      - name: Install nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci --force

      - name: Check licenses
        run: npm run license:check

      - name: Check outdated
        run: npm run outdated:check

      - name: Get version from package.json
        if: ${{ github.event.pull_request.base.ref == 'master'}}
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Check tag
        if: ${{ github.event.pull_request.base.ref == 'master'}}
        uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: v${{ steps.package-version.outputs.current-version}}

      - name: Tag exists
        if: ${{ github.event.pull_request.base.ref == 'master' && steps.check-tag.outputs.exists == 'true' }}
        run: |
          echo "::error::Please update version in package.json. Release version v${{ steps.package-version.outputs.current-version}} still exists"
          exit 1

  code-check:
    needs: vulnerability-check
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Install nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci --force

      - name: Check eslint
        run: npm run eslint:check

      - name: Check TypeScript type
        run: npm run type:check

      - name: Unit test
        run: npm run test:coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.tests/coverage/lcov.info
          slug: armadacore/TeamFlow
          fail_ci_if_error: true
  pre-build:
    if: ${{ github.event.pull_request.base.ref == 'master'}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    env:
      APPLE_ID: ${{secrets.APPLE_ID}}
      APPLE_PASSWORD: ${{secrets.APPLE_PASSWORD}}
      APPLE_TEAM_ID: ${{secrets.APPLE_TEAM_ID}}
      APPLE_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
    steps:
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install frontend dependencies
        run: npm ci --force

      - name: Release draft
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ env.CERT_ID }}
        with:
          releaseName: v__VERSION__
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
